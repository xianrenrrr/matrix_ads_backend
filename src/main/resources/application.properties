spring.application.name=demo

# Server Configuration
server.port=${PORT:8080}
server.shutdown=graceful

# File Upload Configuration
spring.servlet.multipart.max-file-size=200MB
spring.servlet.multipart.max-request-size=200MB

# Firebase Configuration (Firestore only - storage migrated to Alibaba OSS)
firebase.enabled=true
firebase.service-account-key=${FIREBASE_SERVICE_ACCOUNT_KEY:/Users/liqiyang/Desktop/project/matrix_ads/matrix_ads_backend/serviceAccountKey.json}

# AI Configuration
openai.api.key=${OPENAI_API_KEY:}
ai.template.useObjectOverlay=true
ai.template.includeLabelDetection=true

# Segmentation Provider Configuration
ai.seg.provider=${AI_SEG_PROVIDER:yolov8}
ai.overlay.minConf=0.60
ai.overlay.minArea=0.08
ai.overlay.maxObjects=4

# PaddleDet Service Configuration
paddle.seg.url=${PADDLE_SEG_URL:https://paddledet-service.onrender.com/detect}
paddle.seg.token=${PADDLE_SEG_TOKEN:}

# Qwen API Configuration
qwen.api.base=${QWEN_API_BASE:${AI_QWEN_ENDPOINT:https://dashscope.aliyuncs.com/compatible-mode/v1}}
qwen.api.key=${QWEN_API_KEY:${AI_QWEN_API_KEY:}}
qwen.model=qwen-vl-plus
qwen.suggest.model=${QWEN_SUGGEST_MODEL:qwen-plus}
qwen.timeout.ms=15000

# AI Providers Configuration
ai.providers.qwen.enabled=true
ai.providers.qwen.api-key=${AI_QWEN_API_KEY:}
ai.providers.qwen.model=qwen-vl-plus
ai.providers.qwen.endpoint=https://dashscope.aliyuncs.com/compatible-mode/v1

ai.providers.yolo.enabled=true
ai.providers.yolo.api-key=${AI_YOLO_API_KEY:}

# Prefer larger objects only for YOLO fallback polygon detection
ai.providers.yolo.min-area=0.08

# AI Object Overlay Configuration
ai.overlay.confidenceThreshold=0.6
ai.overlay.maxObjects=4
ai.overlay.minArea=0.08
ai.overlay.nmsIouThreshold=0.5
ai.overlay.smoothingDelta=0.15

# AI Label Localization Configuration
ai.labels.localization.enabled=true

# AI Polygon Overlay Configuration
ai.overlay.polygons.enabled=true
ai.overlay.polygons.maxShapes=4
ai.overlay.polygons.minArea=0.08

# FFmpeg Scene Detection Configuration
ai.scenes.threshold=0.7
ffmpeg.path=ffmpeg

# Health Check Configuration for Render
management.endpoints.web.exposure.include=health,info
management.endpoint.health.probes.enabled=true
management.endpoint.health.show-details=always
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true
management.server.port=${server.port}

# Reduce startup time
spring.main.lazy-initialization=false

# Development Tools (disabled in production)
spring.devtools.restart.enabled=${DEVELOPMENT_MODE:false}
spring.devtools.livereload.enabled=${DEVELOPMENT_MODE:false}

# Performance Optimizations for Production
spring.jpa.open-in-view=false
logging.level.root=INFO
logging.level.com.example.demo=INFO

# Suppress Firestore warnings for legacy fields
logging.level.com.google.cloud.firestore.CustomClassMapper=ERROR

# Disable unnecessary auto-configurations in production
spring.autoconfigure.exclude=${DISABLE_AUTOCONFIGURE:}

ffprobe.path=ffprobe

# Region labeling (full-frame context) configuration
ai.labeling.regions.enabled=true
ai.labeling.regions.minConf=0.8
ai.labeling.perCrop.enabled=false


# Alibaba OSS Configuration (Primary Storage Service)
alibaba.oss.enabled=true
alibaba.oss.bucket-name=${ALIBABA_OSS_BUCKET:xpectra}
alibaba.oss.endpoint=${ALIBABA_OSS_ENDPOINT:oss-cn-shanghai.aliyuncs.com}
alibaba.oss.access-key-id=${ALIBABA_OSS_ACCESS_KEY_ID:}
alibaba.oss.access-key-secret=${ALIBABA_OSS_ACCESS_KEY_SECRET:}

# Azure Video Indexer Configuration (Superior Subtitle Extraction)
# Get credentials from: https://www.videoindexer.ai
# Trial account: 10 hours/month free, location="trial"
# Production: Pay-as-you-go, location=your Azure region (e.g., "eastus")
AZURE_VIDEO_INDEXER_ACCOUNT_ID=${AZURE_VIDEO_INDEXER_ACCOUNT_ID:}
AZURE_VIDEO_INDEXER_SUBSCRIPTION_KEY=${AZURE_VIDEO_INDEXER_SUBSCRIPTION_KEY:}
AZURE_VIDEO_INDEXER_LOCATION=${AZURE_VIDEO_INDEXER_LOCATION:trial}
